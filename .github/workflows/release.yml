name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            os_name: linux
            arch: amd64
          - os: windows-latest
            os_name: windows
            arch: amd64
          - os: macos-latest
            os_name: darwin
            arch: amd64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build executable
      shell: bash
      run: |
        ASSET_NAME="csv-compare_${{ github.ref_name }}_${{ matrix.os_name }}_${{ matrix.arch }}"
        echo "ASSET_NAME=$ASSET_NAME" >> $GITHUB_ENV

        # Build binary named 'csv-compare'
        pyinstaller --onefile --name "csv-compare" --console main.py

        cd dist

        if [[ "${{ matrix.os_name }}" == "windows" ]]; then
          ARCHIVE_NAME="${ASSET_NAME}.zip"
          powershell -Command "Compress-Archive -Path csv-compare.exe -DestinationPath $ARCHIVE_NAME"
        else
          ARCHIVE_NAME="${ASSET_NAME}.tar.gz"
          tar -czvf $ARCHIVE_NAME csv-compare
        fi

        echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ASSET_NAME }}
        path: dist/${{ env.ARCHIVE_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: csv-compare_*
        merge-multiple: true
        path: ./dist

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        tag_name: ${{ github.ref_name }}
        name: "csv-compare ${{ github.ref_name }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}